{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/components/error/error.component.ts","./src/app/core/components/error/error.component.html","./src/app/core/core.module.ts","./src/app/core/guards/auth.guard.ts","./src/app/core/interceptors/jwt.interceptor.ts","./src/app/core/services/auth.service.ts","./src/app/core/services/error.service.ts","./src/app/core/services/token-data.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './core/guards/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: 'wygeneruj-rachunek', canActivate: [AuthGuard],\r\n    loadChildren: () => import('./generator/generator.module').then(m => m.GeneratorModule)},\r\n  { path: 'logowanie', loadChildren: () => import('./login/login.module').then(m => m.LoginModule)},\r\n  {path: '**', redirectTo: '/wygeneruj-rachunek'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './core/services/auth.service';\r\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\r\nimport { ErrorService } from './core/services/error.service';\r\nimport { ErrorData } from './core/models/error-data.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  loggedIn$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(null);\r\n  error$: BehaviorSubject<ErrorData> = new BehaviorSubject<ErrorData>(null);\r\n\r\n  constructor(private readonly authService: AuthService,\r\n              private readonly errorService: ErrorService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    combineLatest([this.authService.jwtToken, this.errorService.errorData])\r\n      .subscribe(([tokenData, errorData]) => {\r\n        // console.log('e', errorData);\r\n        this.loggedIn$.next(!!tokenData);\r\n        this.error$.next(errorData);\r\n      });\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.removeTokenData();\r\n    this.error$.next(null);\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-light bg-navbar px-3\">\r\n  <span class=\"navbar-brand text-white\">Generator rachunk√≥w</span>\r\n  <ng-container *ngIf=\"loggedIn$ | async\">\r\n    <button class=\"btn btn-outline-primary my-2 my-sm-0\" (click)=\"logout()\" type=\"submit\">Wyloguj</button>\r\n  </ng-container>\r\n</nav>\r\n\r\n<ng-container *ngIf=\"error$ | async as error\">\r\n  <app-error\r\n    [error]=\"error\"\r\n  ></app-error>\r\n</ng-container>\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CoreModule } from './core/core.module';\r\nimport { JwtInterceptor } from './core/interceptors/jwt.interceptor';\r\nimport { AuthGuard } from './core/guards/auth.guard';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule,\r\n    CoreModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: JwtInterceptor,\r\n      multi: true\r\n    }, AuthGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input } from '@angular/core';\r\nimport { ErrorData } from '../../models/error-data.model';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html'\r\n})\r\nexport class ErrorComponent {\r\n  errorText: { title: string, text: string };\r\n\r\n  @Input() set error(errorData: ErrorData) {\r\n    this.errorText = this.errorsMap.get(`${errorData.status}-${errorData.url}`);\r\n  }\r\n\r\n  errorsMap = new Map<string, { title: string, text: string }>([\r\n    ['401-http://localhost:3000/auth/login', {\r\n      title: 'B≈ÇƒÖd logowania',\r\n      text: 'Nieprawid≈Çowa nazwa u≈ºytkownika lub has≈Ço.'\r\n    }], ['401-http://localhost:3000/inpost/invoice-data', {\r\n      title: 'B≈ÇƒÖd autoryzacji Tokenu',\r\n      text: 'Nie mo≈ºemy wygenerowaƒá rachunku. Przekierowywanie do strony logowania.'\r\n    }], ['401-http://localhost:3000/inpost/email', {\r\n      title: 'B≈ÇƒÖd autoryzacji Tokenu',\r\n      text: 'Nie mo≈ºemy wys≈Çaƒá emaila. Zaloguj siƒô ponownie.'\r\n    }]\r\n  ]);\r\n}\r\n","<ng-container *ngIf=\"errorText\">\r\n  <div class=\"d-flex w-100 alert alert-danger shadow-sm\">\r\n    <div class=\"offset-2 col-10\">\r\n      <div class=\"pt-1\">\r\n        <p class=\"fw-bold mb-0\">{{errorText.title}}</p>\r\n        <p>{{errorText.text}}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ErrorComponent } from './components/error/error.component';\r\n\r\n@NgModule({\r\n  declarations: [ ErrorComponent ],\r\n  exports: [ ErrorComponent],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  providers: []\r\n})\r\nexport class CoreModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { TokenDataService } from '../services/token-data.service';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private tokenDataService: TokenDataService, private router: Router) {\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot,\r\n  ): Observable<boolean> {\r\n    return this.authService.jwtToken.pipe(\r\n      map(token => {\r\n        if (!token) {\r\n          localStorage.removeItem('auth-token');\r\n          this.router.navigateByUrl('/logowanie');\r\n        }\r\n        return !!token;\r\n      }));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable, EMPTY, throwError } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { catchError, exhaustMap } from 'rxjs/operators';\r\nimport { ErrorService } from '../services/error.service';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authService: AuthService, private errorService: ErrorService) {\r\n  }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    return this.authService.jwtToken.pipe(\r\n      exhaustMap((jwtToken) => {\r\n          let req = request;\r\n          if (!request.url.includes('/auth/login')) {\r\n            req = request.clone({setHeaders: {Authorization: `Bearer ${jwtToken}`}});\r\n          }\r\n          return next.handle(req)\r\n            .pipe(\r\n              catchError(err => {\r\n                console.log('errore', err);\r\n                const errorData = {\r\n                  status: err.status,\r\n                  url: err.url\r\n                };\r\n                this.errorService.setErrorData(errorData);\r\n                return throwError(`ERROR ${err.status}`);\r\n              }));\r\n        }\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, take, tap } from 'rxjs/operators';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { TokenDataService } from './token-data.service';\r\nimport { TokenData } from '../models/token-data.model';\r\nimport { environment } from '../../../environments/environment';\r\nimport { ErrorService } from './error.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private jwtTokenSubject = new BehaviorSubject<TokenData>(null);\r\n  private redirectTimeout: ReturnType<typeof setTimeout>;\r\n  // moved it here because each call asObservable() returns new observable. In this case, all of the subscriptions share the same instance\r\n  private jwtTokenObservable: Observable<TokenData> =  this.jwtTokenSubject.asObservable();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private tokenDataService: TokenDataService,\r\n    private errorService: ErrorService) {\r\n  }\r\n\r\n  loginJwtToken(username: string, password: string): Observable<TokenData> {\r\n    return this.http.post<any>(environment.url + '/login', {username, password})\r\n      .pipe(\r\n        take(1),\r\n        tap(data => {\r\n          this.tokenDataService.saveTokenData(data);\r\n          this.jwtTokenSubject.next(data);\r\n        })\r\n      );\r\n  }\r\n\r\n  get jwtToken(): Observable<string> {\r\n    return this.jwtTokenObservable.pipe(\r\n      map((tokenData: TokenData) => {\r\n        if (tokenData) {\r\n          if (this.tokenDataService.validateToken(tokenData)) {\r\n            return tokenData.token;\r\n          } else if (!this.redirectTimeout) {\r\n            this.tokenDataService.removeTokenData();\r\n            this.jwtTokenSubject.next(null);\r\n            this.redirectTimeout = setTimeout(() => {\r\n              this.errorService.setErrorData(null);\r\n              this.router.navigateByUrl('/logowanie');\r\n              }, 3000);\r\n          }\r\n        }\r\n        return null;\r\n      })\r\n    );\r\n  }\r\n\r\n  removeTokenData(): void {\r\n    if (!this.redirectTimeout) {\r\n      this.tokenDataService.removeTokenData();\r\n      this.jwtTokenSubject.next(null);\r\n      this.router.navigateByUrl('/logowanie');\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ErrorData } from '../models/error-data.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorService {\r\n  private errorSubject = new BehaviorSubject<ErrorData>(null);\r\n\r\n  constructor() { }\r\n\r\n  get errorData(): Observable<ErrorData> {\r\n    return this.errorSubject.asObservable();\r\n  }\r\n\r\n  setErrorData(errorData: ErrorData): void {\r\n    this.errorSubject.next(errorData);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TokenData } from '../models/token-data.model';\r\nimport { CoreModule } from '../core.module';\r\n\r\n// TODO: consider deleting whole component since we are not loading login data after closing tab\r\n@Injectable({\r\n  providedIn: CoreModule\r\n})\r\nexport class TokenDataService {\r\n\r\n  TOKEN_KEY = 'auth-token';\r\n\r\n  saveTokenData(token: TokenData): void {\r\n    localStorage.removeItem(this.TOKEN_KEY);\r\n    localStorage.setItem(this.TOKEN_KEY, JSON.stringify(token));\r\n  }\r\n\r\n  // TODO: CONSIDER DELETING SINCE WE ARE SWITCHING TO SESSIONSTORAGE\r\n  getTokenData(): TokenData {\r\n    return JSON.parse(localStorage.getItem(this.TOKEN_KEY));\r\n  }\r\n\r\n  removeTokenData(): void {\r\n    localStorage.removeItem(this.TOKEN_KEY);\r\n  }\r\n\r\n  validateToken(authData: TokenData): boolean {\r\n    return new Date() <= new Date(authData.exp * 1000);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  url: 'http://localhost:3000'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["BehaviorSubject","combineLatest","i0","AppComponent","constructor","authService","errorService","ngOnInit","jwtToken","errorData","subscribe","tokenData","loggedIn$","next","error$","logout","removeTokenData","selectors","decls","vars","consts","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}